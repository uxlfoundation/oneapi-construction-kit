name: build opencl cts
description: build opencl cts

inputs:
  target:
    description: 'target architecture'

runs:
  # We don't want a new docker just a list of steps, so mark as composite
  using: "composite"
  steps:
    - name: calc vars
      id: calc_vars
      uses: ./.github/actions/calc_vars
      with:
        target: ${{ inputs.target }}

    - name: Install Ninja
      uses: llvm/actions/install-ninja@a1ea791b03c8e61f53a0e66f2f73db283aa0f01e # main branch
    
    - name: download icd artifact
      uses: actions/download-artifact@v4
      with:
        name: icd_${{inputs.target}}
        path: install_icd

    - name: download header artifact
      uses: actions/download-artifact@v4
      with:
        name: header_${{inputs.target}}
        path: install_headers

    - name: build opencl cts
      shell: bash    
      run: |
        sudo apt-get update
        sudo apt-get install -y spirv-tools
        # TODO: use formal checkout
        git -c advice.detachedHead=false clone https://github.com/KhronosGroup/OpenCL-CTS --single-branch --depth 1
        (cd OpenCL-CTS; git log -1)
        # TODO: Ignore patches for now
        #git apply $CI_PROJECT_DIR/patches/OpenCL-CTS-0001-Patch-sub-group-testing.patch
        #git apply $CI_PROJECT_DIR/patches/OpenCL-CTS-0002-Permit-building-for-unknown-architectures.patch
        export CTS_BUILD_TYPE=Release
        # TODO: used by cmake ??
        #export OPENCL_HEADERS_PATH=$GITHUB_WORKSPACE/install_headers
        #export ICD_LOADER_INSTALL_PATH=$GITHUB_WORKSPACE/install_icd
        # TODO: simulate toolchain data for now
        export TOOLCHAIN="-DCMAKE_C_COMPILER=gcc -DCMAKE_C_FLAGS=-m64 -DCMAKE_CXX_COMPILER=g++ -DCMAKE_CXX_FLAGS=-m64 -DPKG_CONFIG_EXECUTABLE=pkg-config"
        cd install_headers
        set -x
        cmake -G Ninja $TOOLCHAIN $GITHUB_WORKSPACE/OpenCL-CTS "-DCMAKE_BUILD_TYPE=$CTS_BUILD_TYPE" -DOPENCL_LIBRARIES=OpenCL "-DCL_INCLUDE_DIR=$GITHUB_WORKSPACE/install_headers/include" "-DCL_LIB_DIR=$GITHUB_WORKSPACE/install_icd/lib"
        ninja -v
        python3 $GITHUB_WORKSPACE/OpenCL-CTS/test_conformance/spirv_new/assemble_spirv.py -v --source-dir $GITHUB_WORKSPACE/OpenCL-CTS/test_conformance/spirv_new/spirv_asm --output-dir $GITHUB_WORKSPACE/install_headers/test_conformance/spirv_bin
        set +x
        cd $GITHUB_WORKSPACE
        # Copy install_icd/bin for cllayerinfo artefact upload
        cp -R install_icd/bin OpenCL-CTS
        ls -lR

    - name: upload opencl cts artifacts
      uses: actions/upload-artifact@v4
      with:
        name: opencl_cts_${{inputs.target}}
        path: |
          OpenCL-CTS/bin
          OpenCL-CTS/test_conformance
          !OpenCL-CTS/test_conformance/**/.*
          !OpenCL-CTS/test_conformance/**/CMakeCommon.txt
          !OpenCL-CTS/test_conformance/**/CMakeLists.txt
          !OpenCL-CTS/test_conformance/**/CMakeCache.txt
          !OpenCL-CTS/test_conformance/**/CMakeFiles
          !OpenCL-CTS/test_conformance/**/CMakeFiles/**
          !OpenCL-CTS/test_conformance/**/*.cmake
          !OpenCL-CTS/test_conformance/**/*.ninja
          !OpenCL-CTS/test_conformance/submission_details_template.txt
          !OpenCL-CTS/test_conformance/test_common
          !OpenCL-CTS/test_conformance/test_common/**
        retention-days: 1

