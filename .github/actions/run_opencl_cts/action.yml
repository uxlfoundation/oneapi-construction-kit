name: run opencl cts
description: run opencl cts

# This action is not standalone and assumes it has been run after the build_opencl_cts action.

inputs:
  target:
    description: 'target architecture'
  test_type:
    description: 'quick | full'
    default: "quick"
  llvm_version:
    description: 'llvm major version (e.g 20,21,main) - to be used for llvm specific fails'
    required: true
  split_index:
    description: "optional split index so this run can be done with different splits, current only 0 or 1"
    default: ''
  cityrunner_args:
    description: "optional extra arguments to pass to cityrunner"
    default: ''

runs:
  using: "composite"
  steps:
    - name: Download ock artefact
      uses: actions/download-artifact@v4
      with:
        name: ock_${{inputs.target}}
        path: install_ock

    - name: download icd artifact
      uses: actions/download-artifact@v4
      with:
        name: icd_${{inputs.target}}
        path: install_icd

    - name: Download opencl cts artefact
      uses: ./.github/actions/download_artifact
      with:
        name: opencl_cts_${{inputs.target}}
        path: $GITHUB_WORKSPACE/test_conformance
        needs_tar: true
        run_id: ${{ github.run_id }}

    - name: Run opencl cts
      shell: bash
      env:
        CTS_CSV_FILE: opencl_conformance_tests_${{inputs.test_type}}.csv
        # TODO: expand filter for other targets
        CTS_FILTER: cts-3.0-online-ignore-linux-host.csv
        CTS_TIMEOUT: 18:00:00 # OK for github?
      run: |
        echo "Running OpenCL CTS tests with CTS file $CTS_CSV_FILE with filter $CTS_FILTER"
        PREPEND_PATH=()
        if [[ "${{inputs.target}}" =~ .*riscv64.* ]] ; then
          PREPEND_PATH=(--prepend-path '/usr/bin/qemu-riscv64 -L /usr/riscv64-linux-gnu')
        fi
        set -x
        # Build override file, all is done first, then the target specific.
        # The last file can overwrite previous overrides.
        python3 scripts/testing/create_override_csv.py -d scripts/testing/opencl_cts \
             -k ${{ inputs.target }} llvm_${{ inputs.llvm_version }} \
             -o override_combined.csv -vv
        CTS_CSV_FILE_PATH=$GITHUB_WORKSPACE/test_conformance/$CTS_CSV_FILE
        if [ "${{ inputs.split_index }}" != "" ]; then
          split -n r/4 $GITHUB_WORKSPACE/test_conformance/$CTS_CSV_FILE --additional-suffix=.csv -d 0
          CTS_CSV_FILE_PATH=00${{ inputs.split_index }}.csv
        fi
        echo Using $CTS_CSV_FILE_PATH

        # $CTS_FILTER ignores certain test, so is treated differently to temporary fails.
        python3 -u $GITHUB_WORKSPACE/scripts/testing/run_cities.py -v \
          --color=always --timeout $CTS_TIMEOUT \
          "${PREPEND_PATH[@]}" \
          -b $GITHUB_WORKSPACE/test_conformance \
          -L $GITHUB_WORKSPACE/install_icd/lib \
          -e CLC_EXECUTABLE=$GITHUB_WORKSPACE/install_ock/bin/clc \
          -e OCL_ICD_FILENAMES=$GITHUB_WORKSPACE/install_ock/lib/libCL.so \
          -e CL_PLATFORM_INDEX=0 \
          -s $CTS_CSV_FILE_PATH \
          -i $GITHUB_WORKSPACE/source/cl/scripts/$CTS_FILTER \
          -o override_combined.csv \
          ${{ inputs.cityrunner_args }}
