From 4c1fa69fb30d94e5edb54d93364a332af0301b67 Mon Sep 17 00:00:00 2001
From: Harald van Dijk <harald.vandijk@codeplay.com>
Date: Wed, 15 May 2024 17:57:47 +0100
Subject: [PATCH] Permit building for unknown architectures.

---
 CMakeLists.txt                        | 3 ++-
 test_common/harness/fpcontrol.h       | 6 +++---
 test_common/harness/rounding_mode.cpp | 5 +++--
 test_common/harness/testHarness.cpp   | 3 ++-
 4 files changed, 10 insertions(+), 7 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 5cfef6b3..0e4dd1f2 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -78,7 +78,8 @@ elseif(CMAKE_SYSTEM_PROCESSOR MATCHES "i686.*|i386.*|x86.*")
 endif()
 
 if(NOT DEFINED CLConform_TARGET_ARCH)
-    message (FATAL_ERROR "Target architecture not recognised. Exiting.")
+    message (WARNING "Target architecture not recognised.")
+    set(CLConform_TARGET_ARCH unknown)
 endif()
 
 macro(add_cxx_flag_if_supported flag)
diff --git a/test_common/harness/fpcontrol.h b/test_common/harness/fpcontrol.h
index 12aba0a9..c6f94140 100644
--- a/test_common/harness/fpcontrol.h
+++ b/test_common/harness/fpcontrol.h
@@ -70,7 +70,7 @@ inline void ForceFTZ(FPU_mode_type *mode)
 #elif defined(__mips__)
     fpa_bissr(FPA_CSR_FS);
 #else
-#error ForceFTZ needs an implentation
+#warning ForceFTZ needs an implentation
 #endif
 }
 
@@ -98,7 +98,7 @@ inline void DisableFTZ(FPU_mode_type *mode)
 #elif defined(__mips__)
     fpa_bicsr(FPA_CSR_FS);
 #else
-#error DisableFTZ needs an implentation
+#warning DisableFTZ needs an implentation
 #endif
 }
 
@@ -118,7 +118,7 @@ inline void RestoreFPState(FPU_mode_type *mode)
 #elif defined(__mips__)
     // Mips runs by default with DAZ=1 FTZ=1
 #else
-#error RestoreFPState needs an implementation
+#warning RestoreFPState needs an implementation
 #endif
 }
 #else
diff --git a/test_common/harness/rounding_mode.cpp b/test_common/harness/rounding_mode.cpp
index 191c04d9..3100a225 100644
--- a/test_common/harness/rounding_mode.cpp
+++ b/test_common/harness/rounding_mode.cpp
@@ -225,7 +225,8 @@ void *FlushToZero(void)
     fpa_bissr(FPA_CSR_FS);
     return NULL;
 #else
-#error Unknown arch
+#warning Unknown arch
+    return NULL;
 #endif
 #else
 #error  Please configure FlushToZero and UnFlushToZero to behave properly on this operating system.
@@ -255,7 +256,7 @@ void UnFlushToZero(void *p)
 #elif defined(__mips__)
     fpa_bicsr(FPA_CSR_FS);
 #else
-#error Unknown arch
+#warning Unknown arch
 #endif
 #else
 #error  Please configure FlushToZero and UnFlushToZero to behave properly on this operating system.
diff --git a/test_common/harness/testHarness.cpp b/test_common/harness/testHarness.cpp
index 0e3c49e9..4c565cec 100644
--- a/test_common/harness/testHarness.cpp
+++ b/test_common/harness/testHarness.cpp
@@ -1316,7 +1316,8 @@ void PrintArch(void)
 #elif defined(__mips__)
     vlog("ARCH:\tmips\n");
 #else
-#error unknown arch
+#warning unknown arch
+    vlog("ARCH:\tunknown\n");
 #endif
 
 #if defined(__APPLE__)
-- 
2.43.0


