FROM ubuntu:22.04

RUN apt-get update 

# FROM INFRA UBUNTU BASE

RUN apt-get install -y git git-crypt wget curl jq xz-utils build-essential zlib1g-dev lsb-release libssl-dev

# FROM 22 OCK BASE - if not already added

# Enable ability to install foreign packages for cross compilation
dpkg --add-architecture i386
dpkg --add-architecture arm64
dpkg --add-architecture riscv64

# The main archive only hosts amd64 and i386, we need to add ports for arm64 and riscv64.
RUN sed -i -e '/^deb /{h;s|deb |&[arch=amd64,i386] |p;g;s|deb http://[^ ]*|deb [arch=arm64,riscv64] http://ports.ubuntu.com/ubuntu-ports|p;d}' /etc/apt/sources.list

# Add VulkanSDK latest package repository
RUN wget -qO - https://packages.lunarg.com/lunarg-signing-key-pub.asc | apt-key add -
RUN wget -qO /etc/apt/sources.list.d/lunarg-vulkan-1.3.243-jammy.list https://packages.lunarg.com/vulkan/1.3.243/lunarg-vulkan-1.3.243-jammy.list
# Sync the two above package repositories
RUN apt-get update

# Install minimum requirements
RUN apt-get install --yes cmake libtinfo-dev
# Install vulkan-sdk
RUN apt-get install --yes vulkan-sdk
# Install 32-bit requirements
RUN apt-get install --yes gcc-multilib g++-multilib libc6-dev:i386 lib32tinfo-dev
# Install Arm requirements
RUN apt-get install --yes gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf
# Install AArch64 requirements
RUN apt-get install --yes gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
# Install RISC-V requirements
RUN apt-get install --yes gcc-riscv64-linux-gnu g++-riscv64-linux-gnu
# Install recommended packages
RUN apt-get install --yes python3 python3-pip ninja-build doxygen
# Install documentation packages
RUN apt-get install --yes graphviz latexmk texlive-xetex xindy texlive-fonts-extra
# Install CI utility packages
RUN apt-get install --yes parallel
# Install QEMU for testing cross compilation.
RUN apt-get install --yes qemu-user
# Install pkg-config for dpc++ builds and locally built spir-v
RUN apt-get install --yes pkg-config

# Enforce use of python3
RUN apt-get install --yes python-is-python3
RUN update-alternatives --install /usr/bin/pip pip `which pip3` 30

# Install python packages
RUN pip install cmakelint colorama flake8 lit pylint requests virtualenv yapf python-gitlab distro clang-format==19.1.0

# FROM OUR CURRENT INSTALLS PLUS ANY NEW EXTRAS - if not already added

RUN apt-get -y install sudo
RUN sudo apt install -y zstd
RUN sudo apt install -y gnupg
RUN sudo apt install -y gcc g++
RUN sudo apt install -y file
