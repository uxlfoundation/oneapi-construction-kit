FROM ubuntu:24.04

RUN apt-get update 
RUN apt-get install -y git git-crypt wget curl jq xz-utils build-essential zlib1g-dev lsb-release libssl-dev
# Set the timezone, required to avoid hanging on input
ENV TZ=Europe/London
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Enable ability to install foreign packages for cross compilation
RUN dpkg --add-architecture i386
RUN dpkg --add-architecture arm64
RUN dpkg --add-architecture riscv64

# The main archive only hosts amd64 and i386, we need to add ports for arm64 and riscv64.
RUN sed -i -e '/^Types:/,/^Signed-By:/{/Types:/{h;d};H;/^Signed-By:/{g;s|$|\nArchitectures: amd64,i386\n|p;g;s|URIs: [^\n]*|URIs: http://ports.ubuntu.com/ubuntu-ports|;s|$|\nArchitectures: arm64,riscv64|p;};d}' /etc/apt/sources.list.d/ubuntu.sources

# Add VulkanSDK latest package repository
RUN wget -qO - https://packages.lunarg.com/lunarg-signing-key-pub.asc | apt-key add -
RUN wget -qO /etc/apt/sources.list.d/lunarg-vulkan-noble.list https://packages.lunarg.com/vulkan/lunarg-vulkan-noble.list
# Sync the two above package repositories
RUN apt-get update

# Add clang-tidy
RUN wget -qO - https://apt.llvm.org/llvm-snapshot.gpg.key | gpg --dearmor - | tee /usr/share/keyrings/llvm-archive-keyring.gpg >/dev/null
RUN echo 'deb [signed-by=/usr/share/keyrings/llvm-archive-keyring.gpg] http://apt.llvm.org/noble/ llvm-toolchain-noble-19 main' | tee /etc/apt/sources.list.d/llvm.list >/dev/null
RUN apt-get update
RUN apt-get install --yes clang-tidy-19

# Install minimum requirements
RUN apt-get install --yes cmake libtinfo-dev
RUN apt-get install --yes vulkan-sdk
# Install 32-bit requirements
RUN apt-get install --yes gcc-multilib g++-multilib libc6-dev:i386 lib32ncurses-dev
# Install Arm requirements
RUN apt-get install --yes gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf
# Install AArch64 requirements
RUN apt-get install --yes gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
# Install RISC-V requirements
RUN apt-get install --yes gcc-riscv64-linux-gnu g++-riscv64-linux-gnu
# Install recommended packages
RUN apt-get install --yes python3 python3-pip ninja-build doxygen
# Install documentation packages
RUN apt-get install --yes graphviz latexmk texlive-xetex xindy texlive-fonts-extra
# Install CI utility packages
RUN apt-get install --yes parallel
# Install QEMU for testing cross compilation.
RUN apt-get install --yes qemu-user
# Install pkgconf for dpc++ builds and locally built spir-v
RUN apt-get install --yes pkgconf:amd64 pkgconf:arm64 pkgconf:i386 pkgconf:riscv64
# Install spirv tools
RUN apt-get install --yes spirv-tools

# Set-up pip
RUN update-alternatives --install /usr/bin/pip pip `which pip3` 30

# Install python packages
RUN apt-get install --yes python3-colorama python3-distro python3-flake8 python3-gitlab python3-requests python3-virtualenv python3-yapf pipx
RUN PIPX_HOME=/usr/local/share/pipx PIPX_BIN_DIR=/usr/local/bin PIPX_MAN_DIR=/usr/local/share/man pipx install cmakelint lit pylint clang-format==19.1.0

RUN apt-get -y install sudo
RUN apt-get -y install gh
RUN apt install -y zstd
RUN apt install -y gnupg
RUN apt install -y gcc g++
RUN apt install -y file
RUN apt install -y ccache
